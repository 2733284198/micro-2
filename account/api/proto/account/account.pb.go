// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account/api/proto/account/account.proto

/*
Package go_micro_api_account is a generated protocol buffer package.

It is generated from these files:
	account/api/proto/account/account.proto

It has these top-level messages:
	ReqLogin
	ReqRegister
	Rsp
*/
package go_micro_api_account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_api "github.com/micro/go-api/proto"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqLogin struct {
	Nickname string `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	Pwd      string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *ReqLogin) Reset()                    { *m = ReqLogin{} }
func (m *ReqLogin) String() string            { return proto.CompactTextString(m) }
func (*ReqLogin) ProtoMessage()               {}
func (*ReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReqLogin) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ReqLogin) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type ReqRegister struct {
	Nickname string `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	Pwd      string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	PwdRe    string `protobuf:"bytes,3,opt,name=pwdRe" json:"pwdRe,omitempty"`
}

func (m *ReqRegister) Reset()                    { *m = ReqRegister{} }
func (m *ReqRegister) String() string            { return proto.CompactTextString(m) }
func (*ReqRegister) ProtoMessage()               {}
func (*ReqRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReqRegister) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ReqRegister) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *ReqRegister) GetPwdRe() string {
	if m != nil {
		return m.PwdRe
	}
	return ""
}

type Rsp struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *Rsp) Reset()                    { *m = Rsp{} }
func (m *Rsp) String() string            { return proto.CompactTextString(m) }
func (*Rsp) ProtoMessage()               {}
func (*Rsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Rsp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Rsp) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Rsp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqLogin)(nil), "go.micro.api.account.ReqLogin")
	proto.RegisterType((*ReqRegister)(nil), "go.micro.api.account.ReqRegister")
	proto.RegisterType((*Rsp)(nil), "go.micro.api.account.Rsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	Login(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error)
	Register(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.api.account"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Login(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Login", in)
	out := new(go_micro_api.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Register(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Register", in)
	out := new(go_micro_api.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	Login(context.Context, *go_micro_api.Request, *go_micro_api.Response) error
	Register(context.Context, *go_micro_api.Request, *go_micro_api.Response) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Login(ctx context.Context, in *go_micro_api.Request, out *go_micro_api.Response) error {
	return h.AccountHandler.Login(ctx, in, out)
}

func (h *Account) Register(ctx context.Context, in *go_micro_api.Request, out *go_micro_api.Response) error {
	return h.AccountHandler.Register(ctx, in, out)
}

func init() { proto.RegisterFile("account/api/proto/account/account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x49, 0xa2, 0x40, 0x39, 0x24, 0x84, 0xac, 0x80, 0xa2, 0x4c, 0x28, 0x4b, 0x59, 0x70,
	0x24, 0x58, 0x2a, 0x31, 0x31, 0xb1, 0xb0, 0xe0, 0x37, 0x48, 0x93, 0x93, 0x39, 0x55, 0xf1, 0x39,
	0xb1, 0xa3, 0xae, 0x3c, 0x3a, 0xaa, 0x5d, 0x2a, 0xda, 0xad, 0x93, 0x7d, 0xdf, 0xe9, 0xff, 0xa4,
	0xfb, 0x61, 0xd9, 0x76, 0x1d, 0xcf, 0xc6, 0x37, 0xad, 0xa5, 0xc6, 0x4e, 0xec, 0xb9, 0x39, 0x90,
	0xf8, 0xca, 0x40, 0x45, 0xa1, 0x59, 0x0e, 0xd4, 0x4d, 0x2c, 0x5b, 0x4b, 0x72, 0xbf, 0xab, 0x96,
	0x9a, 0xfc, 0xf7, 0xbc, 0x96, 0x1d, 0x0f, 0x4d, 0xd8, 0x36, 0x9a, 0x9f, 0xff, 0xa9, 0x2c, 0xc5,
	0x78, 0xbd, 0x82, 0x85, 0xc2, 0xf1, 0x93, 0x35, 0x19, 0x51, 0xc1, 0xc2, 0x50, 0xb7, 0x31, 0xed,
	0x80, 0x65, 0xf2, 0x98, 0x3c, 0x5d, 0xab, 0xc3, 0x2c, 0xee, 0x20, 0xb3, 0xdb, 0xbe, 0x4c, 0x03,
	0xde, 0x7d, 0xeb, 0x2f, 0xb8, 0x51, 0x38, 0x2a, 0xd4, 0xe4, 0x3c, 0x4e, 0xe7, 0x85, 0x45, 0x01,
	0xb9, 0xdd, 0xf6, 0x0a, 0xcb, 0x2c, 0xb0, 0x38, 0xd4, 0x1f, 0x90, 0x29, 0x67, 0xc5, 0x2d, 0xa4,
	0xd4, 0x07, 0x49, 0xa6, 0x52, 0xea, 0x8f, 0xd4, 0xe9, 0x89, 0xba, 0x80, 0xdc, 0xf3, 0x06, 0xcd,
	0x9f, 0x28, 0x0c, 0x2f, 0x3f, 0x09, 0x5c, 0xbd, 0xc7, 0x2a, 0xc4, 0x0a, 0xf2, 0x78, 0xde, 0xbd,
	0x3c, 0xaa, 0x4a, 0xe1, 0x38, 0xa3, 0xf3, 0xd5, 0xc3, 0x29, 0x76, 0x96, 0x8d, 0xc3, 0xfa, 0x42,
	0xbc, 0xed, 0xba, 0xd9, 0x9f, 0x77, 0x6e, 0x78, 0x7d, 0x19, 0xfa, 0x7d, 0xfd, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xd4, 0x6a, 0x42, 0xa7, 0xc9, 0x01, 0x00, 0x00,
}
